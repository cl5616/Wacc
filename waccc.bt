//--------------------------------------
//--- 010 Editor v6.0.2 Binary Template
//
// File: .waccc
// Author: 2019
// Revision:
// Purpose: analyze the .waccc format that runs in wacc vm
//--------------------------------------
typedef unsigned char u1;
typedef unsigned short u2;
typedef unsigned int u4;

typedef struct _wacc_header
{
	u1 ident[8];	//"WACC_VM\x00"
	u4 size;				//size of wacc file
	u4 version;				//version of wacc 1 now
	u4 function_off<format=hex>;		//offset of function table (wacc_function)
	u4 function_size;		//number of functions
	u4 class_off<format=hex>;			//offset of class table (wacc_class)
	u4 class_size;			//number of classes
	u4 string_off<format=hex>;			//offset of string table
	u4 string_size;			//number of strings
}wacc_header;

typedef struct _wacc_instruction
{
	u4 instructionLength;	//length of instruction
	u2 registersSize;		//number of register used
	u1 instructions[instructionLength];		//wacc bytecode
}wacc_instruction;

typedef struct _wacc_function
{
	u2 argumentsNum;		//number of arguments of a function
	u2 variablesNum;		//number of variables of a function
	u4 instructions<format=hex>;		//offset to instruction (wacc_instruction)
    local quad off = FTell();//save file pointer
	FSeek(instructions);      //set to
    wacc_instruction instr;      //take a struct   
    FSeek(off);             //seek back

}wacc_function;



typedef struct _wacc_field_info
{
	u2 offset;				//map filed index to the offset compared to header
	u2 type;				//size of the field
}wacc_field_info;


typedef struct _wacc_fields
{
	u4 size;				//number of fields
	wacc_field_info f[size];	//field info
}wacc_fields;

typedef struct _wacc_vtable
{
	u4 size;				//size of virtual table(number of virtual functions)
	u4 functionIdx[size];		//function index in function table
}wacc_vtable;


typedef struct _wacc_class
{
	u2 parentIdx;			//index of parent class
	u2 size;

    u4 fieldOffset<format=hex>;			//offset to fields (wacc_fields)
    local quad off = FTell();//save file pointer
	FSeek(fieldOffset);      //set to field
    wacc_fields fields;      //take a field struct   
    FSeek(off);             //seek back

	u4 vtableOffset<format=hex>;		//offset to virtual table of the class (wacc_vtable)
    off = FTell();//save file pointer
	FSeek(vtableOffset);      //set to vtable
    wacc_vtable vtable;      //take a vtable struct   
    FSeek(off);             //seek back
}wacc_class;

typedef struct _wacc_string
{
    u4 stringOff<format=hex>;
    local quad off = FTell();//save file pointer
	FSeek(stringOff);      //set to
    string str;      //take a struct   
    FSeek(off);             //seek back
}wacc_string;


wacc_header header;
local int i;
for(i = 0; i < header.function_size; i++)
{
    wacc_function func;
}
//assume the tables are continuous

for(i = 0; i < header.class_size; i++)
{
    wacc_class classes;
}

for(i = 0; i < header.string_size; i++)
{
    wacc_string stringTabs;
}
//wacc_string stringTabs;
//wacc_string stringTabs2;
